{"version":3,"sources":["TicTacToeSquare.jsx","TicTacToe.jsx","index.js"],"names":["TicTacToeSquare","props","classes","className","state","onClick","index","initialState","ToastX","Toast0","TicTacToe","useState","gameState","updateGameState","isXChance","updateIsXChance","onSquareClicked","strings","Array","from","useEffect","winner","checkWinner","toast","success","lines","console","log","i","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e46f685.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TicTacToeSquare = (props) => {\r\n\r\n    const classes = (props.className ? `${props.className} square` : `square`)\r\n    return (\r\n        \r\n            <span\r\n            className={classes + (props.state === \"X\" ? ` fc-aqua` : ` fc-white`)}\r\n            onClick={() => props.onClick(props.index)}>\r\n           {props.state}\r\n        </span>\r\n\r\n        \r\n\r\n    )\r\n\r\n};\r\n\r\nexport default TicTacToeSquare;","import React, { useState, useEffect } from 'react';\r\nimport TicTacToeSquare from './TicTacToeSquare';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst initialState = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n\r\nconst ToastX = () =>{\r\n    return (\r\n        <div className='toasted'>\r\n        ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥The Winner is X ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Toast0 = () =>{\r\n    return (\r\n        <div className='toasted'>\r\n        ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥The Winner is 0 ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst TicTacToe = () => {\r\n\r\n    \r\n    \r\n\r\n    const [gameState, updateGameState] = useState(initialState);\r\n    const [isXChance, updateIsXChance] = useState(false);\r\n    const onSquareClicked = (index) => {\r\n        let strings = Array.from(gameState);\r\n        if (strings[index])\r\n            return;\r\n        strings[index] = isXChance ? \"X\" : \"0\";\r\n        \r\n        updateIsXChance(!isXChance);\r\n        updateGameState(strings);\r\n\r\n\r\n    }\r\n    useEffect(() =>{\r\n        const winner = checkWinner();\r\n        if(winner){\r\n\r\n            updateGameState(initialState);\r\n            if(winner == '0'){\r\n                toast.success(<Toast0/>)\r\n            }\r\n            else if( winner == 'X'){\r\n                toast.success(<ToastX/>)\r\n\r\n            }\r\n        \r\n        }\r\n        \r\n  \r\n    }, [gameState])\r\n\r\n    const checkWinner = () =>{\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n        console.log('Class: App, Function: checkWinner ==', gameState[0], gameState[1], gameState[2]);\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n            if (gameState[a] && gameState[a] === gameState[b] && gameState[a] === gameState[c]) {\r\n                return gameState[a];\r\n            }\r\n        }\r\n        \r\n        return null;\r\n\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='app-header'>\r\n                <div className='head-div'>\r\n                <p className='heading-text'>Tic Tac Toe-React</p>\r\n                </div>\r\n                \r\n                \r\n                <div className='glow'>\r\n                <div className='squares'>\r\n                \r\n                \r\n                \r\n                <div className='row jc-center'>\r\n                    <TicTacToeSquare className='b-bottom-right' state={gameState[0]} onClick={() => onSquareClicked(0)} />\r\n                    <TicTacToeSquare className='b-bottom-right' state={gameState[1]} onClick={() => onSquareClicked(1)} />\r\n                    <TicTacToeSquare className='b-bottom' state={gameState[2]} onClick={() => onSquareClicked(2)} />\r\n                </div>\r\n                <div className='row jc-center'>\r\n                    <TicTacToeSquare className='b-bottom-right' state={gameState[3]} onClick={() => onSquareClicked(3)} />\r\n                    <TicTacToeSquare className='b-bottom-right' state={gameState[4]} onClick={() => onSquareClicked(4)} />\r\n                    <TicTacToeSquare className='b-bottom' state={gameState[5]} onClick={() => onSquareClicked(5)} />\r\n                </div>\r\n                <div className='row jc-center'>\r\n                    <TicTacToeSquare className='b-right' state={gameState[6]} onClick={() => onSquareClicked(6)} />\r\n                    <TicTacToeSquare className='b-right' state={gameState[7]} onClick={() => onSquareClicked(7)} />\r\n                    <TicTacToeSquare state={gameState[8]} onClick={() => onSquareClicked(8)} />\r\n                </div>\r\n                \r\n                </div>\r\n                </div>\r\n                <div className=\"baseDiv\">\r\n                <button className='clear-button' onClick={() =>updateGameState(initialState)}>Clear Game</button>\r\n                <p className='fc-aqua fw-600'>Ayush Thakur</p>\r\n                </div>\r\n\r\n                <ToastContainer />\r\n                \r\n                \r\n                \r\n            </div>\r\n            \r\n        </>\r\n    )\r\n\r\n\r\n\r\n};\r\nexport default TicTacToe;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TicTacToe from './TicTacToe';\n\n\nReactDOM.render(\n  <TicTacToe />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}