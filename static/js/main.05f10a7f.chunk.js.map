{"version":3,"sources":["TicTacToeSquare.jsx","TicTacToe.jsx","index.js"],"names":["TicTacToeSquare","props","classes","className","state","onClick","index","initialState","temp","flag","ToastX","Toast0","ToastD","TicTacToe","useState","gameState","updateGameState","isXChance","updateIsXChance","onSquareClicked","strings","Array","from","useEffect","winner","lines","i","length","a","b","c","checkWinner","toast","success","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05f10a7f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TicTacToeSquare = (props) => {\r\n\r\n    const classes = (props.className ? `${props.className} square` : `square`)\r\n    return (\r\n        \r\n            <span\r\n            className={classes + (props.state === \"X\" ? ` fc-aqua` : ` fc-white`)}\r\n            onClick={() => props.onClick(props.index)}>\r\n           {props.state}\r\n        </span>\r\n\r\n        \r\n\r\n    )\r\n\r\n};\r\n\r\nexport default TicTacToeSquare;","import React, { useState, useEffect } from 'react';\r\nimport TicTacToeSquare from './TicTacToeSquare';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst initialState = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\nlet temp = 0;\r\nlet flag = 0;\r\nconst ToastX = () => {\r\n    return (\r\n        <div className='toasted'>\r\n            ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥The Winner is X ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Toast0 = () => {\r\n    return (\r\n        <div className='toasted'>\r\n            ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥The Winner is 0 ðŸ”¥ðŸ”¥ðŸ”¥ðŸ”¥\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ToastD = () => {\r\n    return (\r\n        <div className='toasted'>\r\n            ðŸ”¥ðŸ”¥ðŸ”¥Aww! It's a Draw ðŸ”¥ðŸ”¥ðŸ”¥\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst TicTacToe = () => {\r\n    const [gameState, updateGameState] = useState(initialState);\r\n    const [isXChance, updateIsXChance] = useState(false);\r\n    const onSquareClicked = (index) => {\r\n        let strings = Array.from(gameState);\r\n        if (strings[index])\r\n            return;\r\n        strings[index] = isXChance ? \"X\" : \"0\";\r\n\r\n        updateIsXChance(!isXChance);\r\n        updateGameState(strings);\r\n\r\n\r\n    }\r\n    \r\n\r\n    function checkWinner(){\r\n        temp++;\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6]\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n            if (gameState[a] && gameState[a] === gameState[b] && gameState[a] === gameState[c]) {\r\n                return gameState[a];\r\n            }\r\n\r\n        }       \r\n    };\r\n\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        const winner = checkWinner();\r\n        \r\n        if (winner && winner != 'draw') {\r\n\r\n            updateGameState(initialState);\r\n            if (winner === '0') {\r\n                flag = 1;\r\n                toast.success(<Toast0 />)\r\n            }\r\n            else if (winner === 'X') {\r\n                flag = 1;\r\n                toast.success(<ToastX />)\r\n\r\n            }\r\n        }\r\n\r\n        if (temp == 10 && flag == 0) {\r\n            toast.success(<ToastD />)\r\n            updateGameState(initialState);\r\n        }\r\n    }, [gameState])\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='app-header'>\r\n                <div className='head-div'>\r\n                    <p className='heading-text'>Tic Tac Toe-React</p>\r\n                </div>\r\n\r\n\r\n                <div className='glow'>\r\n                    <div className='squares'>\r\n\r\n\r\n\r\n                        <div className='row jc-center'>\r\n                            <TicTacToeSquare className='b-bottom-right' state={gameState[0]} onClick={() => onSquareClicked(0)} />\r\n                            <TicTacToeSquare className='b-bottom-right' state={gameState[1]} onClick={() => onSquareClicked(1)} />\r\n                            <TicTacToeSquare className='b-bottom' state={gameState[2]} onClick={() => onSquareClicked(2)} />\r\n                        </div>\r\n                        <div className='row jc-center'>\r\n                            <TicTacToeSquare className='b-bottom-right' state={gameState[3]} onClick={() => onSquareClicked(3)} />\r\n                            <TicTacToeSquare className='b-bottom-right' state={gameState[4]} onClick={() => onSquareClicked(4)} />\r\n                            <TicTacToeSquare className='b-bottom' state={gameState[5]} onClick={() => onSquareClicked(5)} />\r\n                        </div>\r\n                        <div className='row jc-center'>\r\n                            <TicTacToeSquare className='b-right' state={gameState[6]} onClick={() => onSquareClicked(6)} />\r\n                            <TicTacToeSquare className='b-right' state={gameState[7]} onClick={() => onSquareClicked(7)} />\r\n                            <TicTacToeSquare state={gameState[8]} onClick={() => onSquareClicked(8)} />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"baseDiv\">\r\n                    <button className='clear-button' onClick={() => updateGameState(initialState)}>Clear Game</button>\r\n                    <p className='fc-aqua fw-600'>Ayush Thakur</p>\r\n                </div>\r\n\r\n                <ToastContainer />\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n\r\n\r\n\r\n};\r\nexport default TicTacToe;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TicTacToe from './TicTacToe';\n\n\nReactDOM.render(\n  <TicTacToe />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}